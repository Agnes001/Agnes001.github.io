(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{452:function(s,t,a){"use strict";a.r(t);var n=a(46),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"使用前提-安装cmake"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用前提-安装cmake"}},[s._v("#")]),s._v(" 使用前提——安装CMake")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" cmake \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测安装是否成功：")]),s._v("\ncmake --version\n")])])]),a("blockquote",[a("p",[s._v("如果你用的是vscode写代码的话，最好还是装一个CMake插件。")])]),s._v(" "),a("h3",{attrs:{id:"vscode调试cmake"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode调试cmake"}},[s._v("#")]),s._v(" vscode调试cmake")]),s._v(" "),a("p",[s._v("添加如下的launch.json文件")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    "version": "0.2.0",\n    "configurations": [\n        \n        {\n            "name": "(gdb) Launch",\n            "type": "cppdbg",\n            "request": "launch",\n            // Resolved by CMake Tools:\n            "program": "${command:cmake.launchTargetPath}",\n            "args": ["9"],\n            "stopAtEntry": false,\n            "cwd": "${workspaceFolder}",\n            "environment": [],\n            "externalConsole": true,\n            "MIMode": "gdb",\n            "setupCommands": [\n                {\n                    "description": "Enable pretty-printing for gdb",\n                    "text": "-enable-pretty-printing",\n                    "ignoreFailures": true\n                }\n            ]\n        }\n    ]\n}\n')])])]),a("p",[s._v("若没有使用vscode的插件，详细配置见附录。")]),s._v(" "),a("h2",{attrs:{id:"cmake生成makefile流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmake生成makefile流程"}},[s._v("#")]),s._v(" CMake生成Makefile流程")]),s._v(" "),a("h3",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),a("p",[s._v("一个最基本的CmakeLists.txt文件最少需要包含以下3行代码：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMake 最低版本号要求")]),s._v("\ncmake_minimum_required "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目信息")]),s._v("\nproject "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("section1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定生成目标")]),s._v("\nadd_executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("section1 main.c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])])]),a("h4",{attrs:{id:"编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[s._v("#")]),s._v(" 编译")]),s._v(" "),a("ol",[a("li",[s._v("执行cmake PATH命令生成 Makefile。其中， PATH 是 CMakeLists.txt 所在的目录。")]),s._v(" "),a("li",[s._v("使用 make 命令进行编译。")])]),s._v(" "),a("h4",{attrs:{id:"代码详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码详解"}},[s._v("#")]),s._v(" 代码详解")]),s._v(" "),a("ul",[a("li",[s._v("cmake_minimum_required：设置一个工程所需要的最低 CMake版本，如果 CMake的当前版本低于指定的版本，它会停止处理工程文件，并报告错误。")]),s._v(" "),a("li",[s._v("project：为整个工程设置一个工程名。")]),s._v(" "),a("li",[s._v("add_executable：使用给定的源文件，为工程引入一个可执行文件。")])]),s._v(" "),a("blockquote",[a("p",[s._v("add_executable("),a("name",[s._v(" [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] source1 [source2 ...]) 引入一个名字为"),a("name",[s._v("的可执行目标，这个可执行目标会由调用该命令时在源文件列表中指定的源文件来构建，比如main.c就是一个源码文件。"),a("name",[s._v("在工程范围内必须是全局唯一的，它实际上就是make编译后生成的可执行文件。")])],1)],1)],1)]),s._v(" "),a("h3",{attrs:{id:"指定c-标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定c-标准"}},[s._v("#")]),s._v(" 指定C++标准")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("cmake_minimum_required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set the project name and version")]),s._v("\nproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# specify the C++ standard")]),s._v("\nset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CMAKE_CXX_STANDARD "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CMAKE_CXX_STANDARD_REQUIRED True"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"新建配置文件添加版本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建配置文件添加版本信息"}},[s._v("#")]),s._v(" 新建配置文件添加版本信息")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("cmake_minimum_required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set the project name and version")]),s._v("\nproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# configure a header file to pass the version number to the source code")]),s._v("\nconfigure_file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TutorialConfig.h.in TutorialConfig.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add that directory to the list of paths to search for include files")]),s._v("\ntarget_include_directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial PUBLIC\n                           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PROJECT_BINARY_DIR}")]),s._v('"')]),s._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("create "),a("code",[s._v("TutorialConfig.h.in")]),s._v(" in the source directory with the following contents:")]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// the configured options and settings for Tutorial")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@")])]),s._v("\n")])])]),a("h3",{attrs:{id:"添加库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加库"}},[s._v("#")]),s._v(" 添加库")]),s._v(" "),a("p",[s._v("For this tutorial we will put the library into a subdirectory called MathFunctions.")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├── CMakeLists.txt\n├── MathFunctions \n│   ├── CMakeLists.txt\n│   ├── MathFunctions.h\n│   └── mysqrt.cxx\n├── TutorialConfig.h.in\n└── tutorial.cxx\n")])])]),a("p",[s._v("MathFunctions--CMakeLists.txt")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("add_library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MathFunctions mysqrt.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("top-level CMakeLists.txt")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the MathFunctions library")]),s._v("\nadd_subdirectory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the executable")]),s._v("\nadd_executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntarget_link_libraries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial PUBLIC MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the binary tree to the search path for include files")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# so that we will find TutorialConfig.h")]),s._v("\ntarget_include_directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial PUBLIC\n                          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PROJECT_BINARY_DIR}")]),s._v('"')]),s._v("\n                          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PROJECT_SOURCE_DIR}")]),s._v('/MathFunctions"')]),s._v("\n                          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"添加可选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加可选项"}},[s._v("#")]),s._v(" 添加可选项")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# should we use our own math functions")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我们应该使用自己的数学函数吗")]),s._v("\noption"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE_MYMATH "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Use tutorial provided math implementation"')]),s._v(" ON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# configure a header file to pass some of the CMake settings")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to the source code")]),s._v("\nconfigure_file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TutorialConfig.h.in TutorialConfig.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USE_MYMATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  add_subdirectory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("APPEND EXTRA_LIBS MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("APPEND EXTRA_INCLUDES "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PROJECT_SOURCE_DIR}")]),s._v('/MathFunctions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nendif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the executable")]),s._v("\nadd_executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial tutorial.cxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntarget_link_libraries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial PUBLIC "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${EXTRA_LIBS}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the binary tree to the search path for include files")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# so that we will find TutorialConfig.h")]),s._v("\ntarget_include_directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial PUBLIC\n                           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PROJECT_BINARY_DIR}")]),s._v('"')]),s._v("\n                           "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${EXTRA_INCLUDES}")]),s._v("\n                           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("请注意，这里使用变量 "),a("code",[s._v("EXTRA_LIBS")]),s._v(" 来收集所有可选库，以供以后链接到可执行文件中。变量 "),a("code",[s._v("EXTRA_INCLUDES")]),s._v(" 类似地用于可选的头文件。")])]),s._v(" "),a("p",[s._v("首先，在 中"),a("code",[s._v("tutorial.cxx")]),s._v("，"),a("code",[s._v("MathFunctions.h")]),s._v("如果需要，请包含标题：")]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// should we include the MathFunctions header?")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("USE_MYMATH")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MathFunctions.h"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<cmath>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])])]),a("p",[s._v("然后，在同一个文件中，"),a("code",[s._v("USE_MYMATH")]),s._v("控制使用哪个平方根函数：")]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifdef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("USE_MYMATH")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" outputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mysqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("inputValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" outputValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("inputValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])])]),a("p",[s._v("由于源代码现在需要"),a("code",[s._v("USE_MYMATH")]),s._v("我们可以"),a("code",[s._v("TutorialConfig.h.in")]),s._v("使用以下行添加它 ：")]),s._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("cmakedefine")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("USE_MYMATH")])]),s._v("\n")])])]),a("h3",{attrs:{id:"添加第三方库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加第三方库"}},[s._v("#")]),s._v(" 添加第三方库")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 链接指定的log4cplus库文件和头文件。")]),s._v("\nset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INC_DIR /usr/local/include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LINK_DIR /usr/local/lib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntarget_include_directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" Tutorial\nPRIVATE "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${INC_DIR}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nlink_directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" Tutorial\nPRIVATE "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LINK_DIR}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntarget_link_libraries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tutorial log4cplus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"单文件目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单文件目录"}},[s._v("#")]),s._v(" 单文件目录")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├── CMakeLists.txt\n├── main.c\n├── myadd.c\n├── myadd.h\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("cmake_minimum_required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出当前目录下所有的源文件--main.c,add.c,add.h")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找当前目录下的所有源文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 并将名称保存到 DIR_SRCS 变量")]),s._v("\naux_source_directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(". DIR_SRCS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nadd_executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Demo "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIR_SRCS}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("编译成静态库")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("cmake_minimum_required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LIBSRC myadd.c myadd.h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nadd_library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myadd "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LIBSRC}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nadd_executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Demo main.c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntarget_link_libraries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Demo myadd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"多文件目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多文件目录"}},[s._v("#")]),s._v(" 多文件目录")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("test2\n├── CMakeLists.txt\n├── main.c\n├── math\n│   ├── CMakeLists.txt\n│   ├── myadd.c\n│   └── myadd.h\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMake 最低版本号要求")]),s._v("\ncmake_minimum_required "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目信息")]),s._v("\nproject "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Demo3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找当前目录下的所有源文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 并将名称保存到 DIR_SRCS 变量")]),s._v("\naux_source_directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(". DIR_SRCS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 math 子目录")]),s._v("\nadd_subdirectory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定生成目标 ")]),s._v("\nadd_executable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Demo main.cc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加链接库")]),s._v("\ntarget_link_libraries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Demo MathFunctions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("math下的CMakeLists.txt是：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找当前目录下的所有源文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 并将名称保存到 DIR_LIB_SRCS 变量")]),s._v("\naux_source_directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(". DIR_LIB_SRCS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成链接库")]),s._v("\nadd_library "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MathFunctions "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIR_LIB_SRCS}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("add_library是编译成一个静态库")]),s._v(" "),a("h2",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[s._v("#")]),s._v(" 附录")]),s._v(" "),a("h3",{attrs:{id:"未使用cmake编译工程时的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未使用cmake编译工程时的配置"}},[s._v("#")]),s._v(" 未使用CMake编译工程时的配置")]),s._v(" "),a("p",[s._v("c_cpp_propertites.json")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"configurations"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Linux"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"includePath"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${workspaceFolder}")]),s._v('/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc-9.3.0/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc-9.3.0/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/x86_64-pc-linux-gnu/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc-9.3.0/lib/gcc/x86_64-pc-linux-gnu/9.3.0/../../../../include/c++/9.3.0/backward/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc-9.3.0/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/include/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc-9.3.0/include/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc-9.3.0/lib/gcc/x86_64-pc-linux-gnu/9.3.0/include-fixed/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/include/x86_64-linux-gnu/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/include/**"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${workspaceFolder}")]),s._v('/cal/**"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"defines"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"compilerPath"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/gcc/bin/gcc"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cStandard"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gnu17"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cppStandard"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gnu++14"')]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"intelliSenseMode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"linux-gcc-x64"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("launch.json")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    // 使用 IntelliSense 了解相关属性。 \n    // 悬停以查看现有属性的描述。\n    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("830387")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.2.0"')]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"configurations"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(gdb) Launch"')]),s._v(", // 配置名称，将会在启动配置的下拉菜单中显示\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cppdbg"')]),s._v(", // 配置类型，这里只能为cppdbg\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"launch"')]),s._v(", // 请求配置类型，可以为launch（启动）或attach（附加）\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"program"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${fileDirname}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${fileBasenameNoExtension}")]),s._v('.out"')]),s._v(", // 将要进行调试的程序的路径\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"args"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(", // 程序调试时传递给程序的命令行参数，一般设为空即可\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stopAtEntry"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false, // 设为true时程序将暂停在程序入口处，我一般设置为true\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cwd"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${workspaceFolder}")]),s._v('"')]),s._v(", // 调试程序时的工作目录\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"environment"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(", // （环境变量？）\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"externalConsole"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" false, // 调试时是否显示控制台窗口，一般设置为true显示控制台，\n                                      // 但是最新版cpptools有BUG，具体请看文末的注意\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"internalConsoleOptions"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"neverOpen"')]),s._v(", // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，你应该不需要对gdb手动输命令吧？\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MIMode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gdb"')]),s._v(", // 指定连接的调试器，可以为gdb或lldb。但目前lldb在windows下没有预编译好的版本。\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"miDebuggerPath"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gdb"')]),s._v(", // 调试器路径，Windows下后缀不能省略，Linux下则去掉\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setupCommands"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" // 用处未知，模板如此\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"description"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Enable pretty-printing for gdb"')]),s._v(",\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-enable-pretty-printing"')]),s._v(",\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignoreFailures"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"preLaunchTask"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile"')]),s._v(" // 调试会话开始前执行的任务，一般为编译程序。与tasks.json的label相对应\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("task.json")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    // See https://go.microsoft.com/fwlink/?LinkId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("733558")]),s._v("\n    // "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the documentation about the tasks.json "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2.0.0"')]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tasks"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"label"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Compile"')]),s._v(", // 任务名称，与launch.json的preLaunchTask相对应\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"command"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"g++"')]),s._v(", // 要使用的编译器, C++就写g++\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"args"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${file}")]),s._v('"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-I"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${workspaceFolder}")]),s._v('/cal"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-o"')]),s._v(", // 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${fileDirname}")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${fileBasenameNoExtension}")]),s._v('.out"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${workspaceFolder}")]),s._v('/cal/test02.cpp"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-g"')]),s._v(", // 生成和调试有关的信息\n                //"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Wall"')]),s._v(", // 开启额外警告\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-static-libgcc"')]),s._v(", // 静态链接\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-std=c++11"')]),s._v(" // C语言最新标准为c11，或根据自己的需要进行修改比如C++17\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(", // 编译命令参数\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shell"')]),s._v(", // 可以为shell或process，前者相当于先打开shell再输入命令，后者是直接运行命令\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"group"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kind"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build"')]),s._v(",\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"isDefault"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" // 设为false可做到一个tasks.json配置多个编译指令，需要自己修改本文件，我这里不多提\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"presentation"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" true, \n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reveal"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"always"')]),s._v(", // 在“终端”中显示编译信息的策略，可以为always，silent，never。具体参见VSC的文档\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"focus"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" true, // 设为true后可以使执行task时焦点聚集在终端\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"panel"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shared"')]),s._v(" // 不同的文件的编译信息共享一个终端面板\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n            //"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"problemMatcher"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gcc")]),s._v('"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);