(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{465:function(t,a,r){"use strict";r.r(a);var s=r(46),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"函数参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数参数"}},[t._v("#")]),t._v(" 函数参数")]),t._v(" "),r("h3",{attrs:{id:"指针作参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指针作参数"}},[t._v("#")]),t._v(" 指针作参数")]),t._v(" "),r("ol",[r("li",[t._v("结构体作为参数，内存消耗大，用结构体的指针可以避免这个问题")]),t._v(" "),r("li",[t._v("常量指针 限定当前对象的内存空间不可以修改")])]),t._v(" "),r("h3",{attrs:{id:"数组作参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组作参数"}},[t._v("#")]),t._v(" 数组作参数")]),t._v(" "),r("ol",[r("li",[t._v("用指针接收，还需要传数组的长度")]),t._v(" "),r("li",[t._v("数组做函数参数相当于指针，最好用 int ary[] 形式，读起来更像数组")]),t._v(" "),r("li",[t._v("多维数组 (int ary [][2],int count)，最高维不定，其余维均已知")])]),t._v(" "),r("h3",{attrs:{id:"引用作参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引用作参数"}},[t._v("#")]),t._v(" 引用作参数")]),t._v(" "),r("ol",[r("li",[t._v("引用的本质是指针，但指针可以传入nullptr空指针，但引用不可以")]),t._v(" "),r("li",[t._v("Role*& role   表示Role指针类型的应用，将Role*用另一个类型代替进行理解  role可以指向其他变量")])]),t._v(" "),r("h3",{attrs:{id:"默认实参"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#默认实参"}},[t._v("#")]),t._v(" 默认实参")]),t._v(" "),r("ol",[r("li",[t._v("默认参数只能放在最后")])]),t._v(" "),r("h3",{attrs:{id:"不定量参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不定量参数"}},[t._v("#")]),t._v(" 不定量参数")]),t._v(" "),r("ol",[r("li",[t._v("int main(int argc, char* argv[]) main函数接收的是不定量的参数")]),t._v(" "),r("li",[t._v("int add(int count, ...)   #include <cstdarg>")])]),t._v(" "),r("div",{staticClass:"language-C++ extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("int add(int count, ...)\n{\n  //va_list arg;\n  char* arg;\n  va_start(arg, count);//获取内存地址\n\n  int sum{};\n  for(int i = 0; i < count; i++)\n  {\n    sum += va_arg(arg,int);//读取\n  }\n\n  va_end(arg);\n  return sum;\n}\n")])])]),r("h2",{attrs:{id:"函数返回"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数返回"}},[t._v("#")]),t._v(" 函数返回")]),t._v(" "),r("h3",{attrs:{id:"返回指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#返回指针"}},[t._v("#")]),t._v(" 返回指针")]),t._v(" "),r("ol",[r("li",[t._v("不要返回局部变量（存放在栈区）的指针")]),t._v(" "),r("li",[t._v("返回结构体时，最好返回结构体的指针")])]),t._v(" "),r("h3",{attrs:{id:"返回引用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#返回引用"}},[t._v("#")]),t._v(" 返回引用")]),t._v(" "),r("p",[t._v("返回引用相当于返回解指针")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),r("p",[t._v("返回指针与返回引用：返回指针可以返回空指针，但引用是不能返回空的")])]),t._v(" "),r("div",{staticClass:"language-c++ extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("//数组的引用  \nint c[100];  \nint (&e)[100] = c;  \n//传递数组引用\nint num(int(&ary)[100])\n{\n  for(auto x:ary);\n  return sizeof(ary);\n}\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);