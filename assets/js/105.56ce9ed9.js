(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{503:function(s,t,n){"use strict";n.r(t);var a=n(46),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。")]),s._v(" "),n("p",[s._v("常用指令")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("FROM - 镜像从那里来\nMAINTAINER - 镜像维护者信息\nRUN - 构建镜像执行的命令，每一次RUN都会构建一层,  是在 docker build时运行。\nCMD - 容器启动的命令，如果有多个则以最后一个为准，也可以为ENTRYPOINT提供参数。在docker run时运行。\nENTRYPOINT - 容器进入时执行的命令，不会被 docker run 的命令行参数指定的指令所覆盖\nWORKDIR - 切换当前执行的工作目录\nEXPOSE - 暴露端口\nADD - 添加文件，如果是压缩文件也解压  \nCOPY - 添加文件，以复制的形式\n")])])]),n("p",[s._v("::: tips\n注意：\nDockerfile 的指令每执行一次都会在docker上新建一层。所以过多无意义的层，会造成镜像膨胀过大。\n以 && 符号连接命令，这样执行后，只会创建 1 层镜像。\n:::")]),s._v(" "),n("p",[s._v("Dockerfile示例")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 生成镜像 docker build -t resolve .")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 生成容器 docker run -it -v /root/wjl/resolve/code/:/data/drogon/--name=resolve resolve:latest bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################")]),s._v("\n\nFROM drogonframework/drogon\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 指定docker的工作目录")]),s._v("\nWORKDIR /data/drogon\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 复制文件到docker容器")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## mysql mysqlconnect")]),s._v("\nADD tool/include.tar /usr/local/\nADD tool/lib.tar /usr/local/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## curl log4cplus")]),s._v("\nADD tool/curl-7.75.0.tar ./\nADD tool/log4cplus-1.2.1.tar ./\nRUN "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" curl-7.75.0 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" ./configure "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\nRUN "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" log4cplus-1.2.1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" ./configure --enable-static "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CXXFLAGS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-std=c++0x"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 拷贝代码")]),s._v("\nCOPY code ./\n\nEXPOSE "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8082")]),s._v("\n\nCMD "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/bash"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TSLC_BACKEND_RESOLVE/build/start.sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);